import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    ext {
        springBootVersion = '1.4.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply from: "versions.gradle"

sourceSets {
    main {
        resources {
            exclude 'static/node_modules/@types/**'
            exclude 'static/node_modules/concurrently/**'
            exclude 'static/node_modules/typescript/**'
            exclude 'static/*.json'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

task compileTypeScript(type: Exec) {
    workingDir './src/main/resources/static/'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd', '/c', 'npm', 'run-script', 'tsc'
    } else {
        commandLine 'npm', 'run-script', 'tsc'
    }
}

task npm(type: Exec) {
    workingDir './src/main/resources/static/'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine 'cmd', '/c', 'npm', 'install'
    } else {
        commandLine 'npm', 'install'
    }
}

compileTypeScript.dependsOn npm
build.dependsOn compileTypeScript

war {
    baseName = 'challenger'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

//bootRun {
//	addResources = true
//}

dependencies {
//  SPRING
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-tomcat')
    compile("org.springframework:spring-jdbc")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: springWebsockets

//  TOOLS
    compile('org.projectlombok:lombok')
    //	compile("org.springframework.boot:spring-boot-devtools")

//  ELASTIC SEARCH
    compile('org.springframework.data:spring-data-elasticsearch')
    compile('net.java.dev.jna:jna')  //jna for elasticsearch

    //swagger
    compile group: 'io.springfox', name: 'springfox-swagger2', version: swagger
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: swagger

//  OTHER
    compile group: 'javax.mail', name: 'mail', version: javaxMail
    compile group: 'org.apache.commons', name: 'commons-io', version: apacheCommons
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: fileUpload
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jackson
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson
    runtime('com.h2database:h2')

//  groovy
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: groovy

//  TEST
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile group: 'org.spockframework', name: 'spock-core', version: spock

}
